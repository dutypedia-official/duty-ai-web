import useChat from "@/lib/hooks/useChat";
import useStockData from "@/lib/hooks/useStockData";
import useVipSignal from "@/lib/hooks/useVipSignal";
import { cn } from "@/lib/utils";
import { useUser } from "@clerk/nextjs";
import { FunctionComponent, useState } from "react";
import { Button } from "../ui/button";
import { toast } from "../ui/use-toast";
import { VideoDialog } from "../goldenChoice/video-dialog";

interface PopularPromptsProps {}

const prompts = [
  {
    title: "ЁЯУ░ Top news bangladesh",
    question: "Top news bangladesh",
  },
  {
    title: "тЪ╜ Today top sports news",
    question: "Today top sports news",
  },
  {
    title: "ЁЯТб Give me a online business idea",
    question: "Give me a online business idea",
  },
  {
    title: "ЁЯПа Remote Work Opportunities",
    question: "Remote Work Opportunities",
  },
  {
    title: "ЁЯзСЁЯП╗тАНЁЯТ╗ Employment law in Bangladesh",
    question: "Employment law in Bangladesh",
  },
  {
    title: "тЬИя╕П Budget Travel Tips",
    question: "Budget Travel Tips",
  },
  {
    title: "ЁЯФР Data protection and privacy laws",
    question:
      "Discuss the laws and regulations surrounding data protection and privacy in Bangladesh.",
  },
  {
    title: "ЁЯТФ Divorce procedures in Bangladesh",
    question:
      "Explain the procedures for obtaining a divorce in Bangladesh, including custody and asset division.",
  },
  {
    title: "ЁЯМН Immigration and visa processes",
    question:
      "Provide insights into the immigration and visa processes for foreigners seeking to work or reside in Bangladesh.",
  },
  {
    title: "ЁЯПа Real estate laws in Bangladesh",
    question:
      "Discuss the legal framework for real estate transactions in Bangladesh, including property purchase and leasing.",
  },
];

const finances = [
  {
    title: "ЁЯУ░ Bangladesh stock market news",
    question: `Bangladesh stock market news`,
  },
  {
    title: "ЁЯУ▒ Should I Invest in GP BD",
    question: `Should I Invest in GP BD`,
  },
  {
    title: "ЁЯУК ржЖржЬржХрзЗрж░ ржЗржиржбрзЗржХрзНрж╕ рж╕ржорзНржкрж░рзНржХрзЗ ржмрж▓",
    question: `ржЖржЬржХрзЗрж░ ржЗржиржбрзЗржХрзНрж╕ рж╕ржорзНржкрж░рзНржХрзЗ ржмрж▓`,
  },
  {
    title: "тЦ╢я╕П Duty AI ржмрзНржпрж╛ржмрж╣рж╛рж░ ржнрж┐ржбрж┐ржУ",
    question: `Duty AI ржмрзНржпрж╛ржмрж╣рж╛рж░ ржнрж┐ржбрж┐ржУ`,
  },
  {
    title: "ЁЯФН Stock Scanner",
    question: "Stock Scanner",
  },
  {
    title: "тЪЦя╕П Golden choice",
    question: `Golden choice`,
  },
];

const forex = [
  {
    title: "EUR/USD",
    question: "EUR/USD",
  },
  {
    title: "GBP/USD",
    question: "GBP/USD",
  },
  {
    title: "USD/JPY",
    question: "USD/JPY",
  },
  {
    title: "AUD/USD",
    question: "AUD/USD",
  },
  {
    title: "EUR/GBP",
    question: "EUR/GBP",
  },
];

const scanner = [
  {
    title: "ЁЯУЕ ржЖржЧрж╛ржорзАржХрж╛рж▓ ржХрзЛржи рж╕рзЗржХрзНржЯрж░ ржнрж╛рж▓рзЛ ржкрж╛рж░ржлрж░рзНржо ржХрж░ржмрзЗ?",
    question: "ржЖржЧрж╛ржорзАржХрж╛рж▓ ржХрзЛржи рж╕рзЗржХрзНржЯрж░ ржнрж╛рж▓рзЛ ржкрж╛рж░ржлрж░рзНржо ржХрж░ржмрзЗ?",
  },
  {
    title: "ЁЯТ░ ржХрзЛржи рж╢рзЗржпрж╝рж╛рж░ржЧрзБрж▓рзЛ рж╕рж░рзНржмрзЛржЪрзНржЪ ржбрж┐ржнрж┐ржбрзЗржирзНржб ржжрзЗржпрж╝?",
    question: "ржХрзЛржи рж╢рзЗржпрж╝рж╛рж░ржЧрзБрж▓рзЛ рж╕рж░рзНржмрзЛржЪрзНржЪ ржбрж┐ржнрж┐ржбрзЗржирзНржб ржжрзЗржпрж╝?",
  },
  {
    title: "ЁЯТ╕ ржХржо ржжрж╛ржорзЗ ржнрж╛рж▓рзЛ ржкржЯрзЗржирж╢рж┐рзЯрж╛рж▓ рж╕рзНржЯржХ ржЦрзБржБржЬрзЗ ржжрж╛ржУред",
    question: "ржХржо ржжрж╛ржорзЗ ржнрж╛рж▓рзЛ ржкржЯрзЗржирж╢рж┐рзЯрж╛рж▓ рж╕рзНржЯржХ ржЦрзБржБржЬрзЗ ржжрж╛ржУред",
  },
  {
    title: "ЁЯУК ржПржЦржи ржХрзЛржи рж╢рзЗржпрж╝рж╛рж░ ржХрзЗржирж╛ ржЙржЪрж┐ржд?",
    question: "ржПржЦржи ржХрзЛржи рж╢рзЗржпрж╝рж╛рж░ ржХрзЗржирж╛ ржЙржЪрж┐ржд?",
  },
  {
    title: "ЁЯФе ржЖржЬржХрзЗрж░ рж╢рзАрж░рзНрж╖ ржкрж╛рж░ржлрж░рзНржорж┐ржВ рж╢рзЗржпрж╝рж╛рж░ржЧрзБрж▓рзЛ ржХрзА?",
    question: "ржЖржЬржХрзЗрж░ рж╢рзАрж░рзНрж╖ ржкрж╛рж░ржлрж░рзНржорж┐ржВ рж╢рзЗржпрж╝рж╛рж░ржЧрзБрж▓рзЛ ржХрзА?",
  },
  {
    title: "тП│ ржХрж┐ржЫрзБ рж╢рж░рзНржЯ ржЯрж╛рж░рзНржо рж╕рзНржЯржХ ржЦрзБржБржЬрзЗ ржжрж╛ржУред",
    question: "ржХрж┐ржЫрзБ рж╢рж░рзНржЯ ржЯрж╛рж░рзНржо рж╕рзНржЯржХ ржЦрзБржБржЬрзЗ ржжрж╛ржУред",
  },
];

const PopularPrompts: FunctionComponent<PopularPromptsProps> = () => {
  const chatStore = useChat();
  const { marketData } = useStockData();
  const {
    setPrompt,
    setSubmitPrompt,
    template,
    setTemplate,
    setOpenGolden,
    setVideoModal,
  } = chatStore;
  const { user } = useUser();
  const [videoOpen, setVideoOpen] = useState(false);

  const topPrompts =
    template === "general"
      ? prompts
      : template === "finance"
      ? finances
      : template === "forex"
      ? forex
      : template === "scanner"
      ? scanner
      : [];

  const onPromptClick = (query: string) => {
    if (query === "Duty AI ржмрзНржпрж╛ржмрж╣рж╛рж░ ржнрж┐ржбрж┐ржУ") {
      setVideoOpen(true);
    } else if (query === "Golden choice") {
      if (marketData.length > 0) {
        setOpenGolden(true);
      } else {
        toast({
          title: "Data not available",
          description: "Please try again later",
          variant: "destructive",
          duration: 3000,
        });
      }
    } else if (query === "Stock Scanner") {
      setTemplate("scanner");
    } else {
      setPrompt(query);
      setSubmitPrompt(true);
    }
  };

  return (
    <div className="px-4 pb-8">
      <h1
        className={cn(
          "text-xl sm:text-3xl font-semibold",
          template === "scanner" && "text-[#6EA8D5]"
        )}>
        Hello, {user?.firstName + " " + user?.lastName}
      </h1>
      <p className="text-muted-foreground sm:mt-2">
        {template === "finance"
          ? "Let's chat about stocks!"
          : template === "scanner"
          ? "ЁЯОп LetтАЩs find the best stocks!"
          : "How can I help you today?"}
      </p>
      <div
        className={cn(
          "mt-8 grid gap-4 bg-card-foreground shadow p-6 rounded-xl",
          template == "general" && "sm:grid-cols-2",
          template === "scanner" &&
            "p-0 shadow-none rounded-none bg-transparent"
        )}>
        {topPrompts.map((prompt, i) => {
          return (
            <Button
              onClick={() => onPromptClick(prompt.question)}
              size="lg"
              key={i}
              className={cn(
                "rounded-md bg-card hover:bg-card",
                template === "scanner" &&
                  "border-[1.5px] border-[#8AB4C9] dark:border-[#3A7CA5] bg-[#E8ECEF] hover:bg-[#E8ECEF] dark:bg-[#2D2F34] hover:dark:bg-[#2D2F34] text-left justify-start px-3"
              )}
              variant="outline">
              <span className="line-clamp-1">{prompt.title}</span>
            </Button>
          );
        })}
      </div>
      <VideoDialog
        open={videoOpen}
        setOpen={setVideoOpen}
        url={"https://www.youtube.com/embed/c6fZbt9zaOM?autoplay=1"}
      />
    </div>
  );
};

export default PopularPrompts;
